{{- if .Values.ingress.enabled -}}
{{- $fullName := include "oidc-forward-auth-middleware.fullname" . -}}
{{- $svcPort := .Values.service.ports.http -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "oidc-forward-auth-middleware.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path | default "/" }}
            {{- if .pathType }}
            pathType: {{ .pathType | default "ImplementationSpecific" }}
            {{- end }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
          {{- end }}
    {{- end }}
{{- end }}
---
apiVersion: "traefik.containo.us/v1alpha1"
kind      : "Middleware"
metadata:
  name     : "oidc-forward-auth-middleware"
  namespace: "kube-system"
spec: 
  forwardAuth: 
    address: "http://{{ $values.namespace }}.oidc-forward-auth-middleware.svc.cluster.local:{{ $svcPort }}/verify"
    authResponseHeaders: [
      "Remote-User",
      "Remote-Name",
      "Remote-Email",
      "Remote-Groups"
    ]
    trustForwardHeader: true