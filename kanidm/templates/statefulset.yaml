apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kanidm.fullname" . }}
  labels:
    {{- include "kanidm.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "kanidm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kanidm.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: generate-cert
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['kanidmd']
          args: ['cert-generate']
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /data/server.toml
              subPath: server.toml
              readOnly: true
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['kanidmd']
          args: [ "server" ]
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: ldaps
              containerPort: {{ .Values.service.ports.ldaps }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: 8443
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /status
              port: 8443
              scheme: HTTPS
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /data/server.toml
              subPath: server.toml
              readOnly: true
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
        - name: nginx
          image: nginx:1.25.0-alpine
          ports:
            - name: http
              containerPort: {{ .Values.service.ports.http }}
              protocol: TCP
          livenessProbe:
              httpGet:
                path: /
                port: {{ .Values.service.ports.http }}
          readinessProbe:
            httpGet:
                path: /
                port: {{ .Values.service.ports.http }}
          volumeMounts:
            - name: config-nginx
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              readOnly: true
          resources: {}

      {{- if .Values.persistence.enabled }}
      volumes:
        - name: config
          configMap:
            name: {{ include "kanidm.fullname" . }}-config
        - name: config-nginx
          configMap:
            name: {{ include "kanidm.fullname" . }}-nginx
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "kanidm.fullname" . }}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
